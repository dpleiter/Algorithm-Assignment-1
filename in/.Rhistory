getwd()
getwd(
)
getwd()
setwd("/home/oli/Desktop/Github/Algorithms & Analysis/Algorithm-Assignment-1/in/")
setwd("/home/oli/Desktop/Github/Algorithms & Analysis/Algorithm-Assignment-1/in/")
ls()
setwd("/home/oli/Desktop/Github/Algorithms & Analysis/Algorithm-Assignment-1/in/")
getwd()
setwd("/home/oli/Desktop/Github/Algorithms & Analysis/Algorithm-Assignment-1/in/")
library(readr)
setwd("/home/oli/Desktop/Github/Algorithms & Analysis/Algorithm-Assignment-1/in/")
df <- read.csv("results.txt", header=TRUE, sep",")
setwd("/home/oli/Desktop/Github/Algorithms & Analysis/Algorithm-Assignment-1/in/")
df <- read.csv("results.txt", header=TRUE, sep=",")
df.head()
head(df)
len(df)
length(df)
rows(df)
columns(df)
df$DataStructure
unique(df$DataStructure)
unique(df$DataStructure)[1]
unique(df$DataStructure)
unique(df$DataStructure)[0]
unique(df$DataStructure)
df$DataStructure <- mutate(df$DataStructure, c('BinarySearchTreeRQ' 'OrderedArrayRQ' 'OrderedLinkedListRQ')
df$DataStructure <- mutate(df$DataStructure, c('BinarySearchTreeRQ', 'OrderedArrayRQ', 'OrderedLinkedListRQ')
, c('Tree', 'Array', 'LinkedList'))
library(dplyr)
install.packages("dplyr")
library(dplyr)
df$DataStructure <- mutate(df$DataStructure, c('BinarySearchTreeRQ', 'OrderedArrayRQ', 'OrderedLinkedListRQ')
, c('Tree', 'Array', 'LinkedList'))
#install.packages("dplyr")
library(dplyr)
df$DataStructure <- mutate(as.String(df$DataStructure), c('BinarySearchTreeRQ', 'OrderedArrayRQ', 'OrderedLinkedListRQ')
, c('Tree', 'Array', 'LinkedList'))
df$DataStructure <- mutate(df$DataStructure, c('BinarySearchTreeRQ', 'OrderedArrayRQ', 'OrderedLinkedListRQ')
, c('Tree', 'Array', 'LinkedList'))
#install.packages("dplyr")
library(dplyr)
df$DataStructure <- recode(df$DataStructure, BinarySearchTreeRQ = 'Tree', OrderedArrayRQ = 'Array',
OrderedLinkedListRQ = 'LinkedList')
head(df)
df_grouped <- group_by(df$DataStructure) %>% summarise(df$SampleSize = max(df$SampleSize))
df_structure <- df %>% group_by(DataStructure)
df_structure <- df %>% group_by(DataStructure)
head(df_structure)
df_grouped <- df %>% group_by(DataStructure)
df_grouped <- df_grouped %>% summarise(
SampleSize = max(SampleSize),
EnqueueTime = mean(EnqueueTime),
PtTime = mean(PtTime),
DequeueTime = mean(DequeueTime)
)
df_grouped <- df %>% group_by(DataStructure)
df_grouped <- df_grouped %>% summarise(
SampleSize = max(SampleSize),
EnqueueTime = mean(EnqueueTime),
PtTime = mean(PtTime),
DequeueTime = mean(DequeueTime)
)
head(df_grouped)
df_grouped <- df %>% group_by(DataStructure, SampleSize)
df_grouped <- df_grouped %>% summarise(
EnqueueTime = mean(EnqueueTime),
PtTime = mean(PtTime),
DequeueTime = mean(DequeueTime)
)
head(df_grouped)
df_grouped <- df %>% group_by(DataStructure, SampleSize)
df_grouped <- df_grouped %>% summarise(
EnqueueTime = mean(EnqueueTime),
PtTime = mean(PtTime),
DequeueTime = mean(DequeueTime)
)
head(df_grouped)[10]
df_grouped <- df %>% group_by(DataStructure, SampleSize)
df_grouped <- df_grouped %>% summarise(
EnqueueTime = mean(EnqueueTime),
PtTime = mean(PtTime),
DequeueTime = mean(DequeueTime)
)
df_grouped
library(ggplot2)
install.packages("ggplot2")
#install.packages("ggplot2")
library(ggplot2)
eq_plt <- ggplot(df_grouped, aes(x = SampleSize, y = EnqueueTime)) + geom_point()
eq_plt
#install.packages("ggplot2")
library(ggplot2)
eq_plt <- ggplot(df_grouped, aes(x = SampleSize, y = EnqueueTime, colour = DataStructure)) + geom_point()
eq_plt
#install.packages("ggplot2")
library(ggplot2)
eq_plt <- ggplot(df_grouped, aes(x = SampleSize, y = EnqueueTime, colour = DataStructure)) + geom_point() + geom_line()
eq_plt
#install.packages("ggplot2")
library(ggplot2)
eq_plt <- ggplot(df_grouped, aes(x = SampleSize, y = EnqueueTime, colour = DataStructure))
+ geom_point()
#install.packages("ggplot2")
library(ggplot2)
eq_plt <- ggplot(df_grouped, aes(x = SampleSize, y = EnqueueTime, colour = DataStructure))
+ geom_point()
#install.packages("ggplot2")
library(ggplot2)
eq_plt <- ggplot(df_grouped, aes(x = SampleSize, y = EnqueueTime, colour = DataStructure)) +
geom_point() +
geom_line()
+ ylab("Enqueue Time (Seconds)")
#install.packages("ggplot2")
library(ggplot2)
eq_plt <- ggplot(df_grouped, aes(x = SampleSize, y = EnqueueTime, colour = DataStructure)) +
geom_point() +
geom_line() +
ylab("Enqueue Time (Seconds)") +
xlab("Sample Size") +
title("Enqueuing Time by Sample Size")
#install.packages("ggplot2")
library(ggplot2)
eq_plt <- ggplot(df_grouped, aes(x = SampleSize, y = EnqueueTime, colour = DataStructure)) +
geom_point() +
geom_line() +
ylab("Enqueue Time (Seconds)") +
xlab("Sample Size") +
title("Enqueuing Time by Sample Size")
#install.packages("ggplot2")
library(ggplot2)
eq_plt <- ggplot(df_grouped, aes(x = SampleSize, y = EnqueueTime, colour = DataStructure)) +
geom_point() +
geom_line() +
ylab("Enqueue Time (Seconds)") +
xlab("Sample Size") + title("Enqueuing Time by Sample Size")
#install.packages("ggplot2")
library(ggplot2)
eq_plt <- ggplot(df_grouped, aes(x = SampleSize, y = EnqueueTime, colour = DataStructure)) +
geom_point() +
geom_line() +
ylab("Enqueue Time (Seconds)") + xlab("Sample Size") + title("Enqueuing Time by Sample Size")
#install.packages("ggplot2")
library(ggplot2)
eq_plt <- ggplot(df_grouped, aes(x = SampleSize, y = EnqueueTime, colour = DataStructure)) +
geom_point() +
geom_line() + ylab("Enqueue Time (Seconds)") + xlab("Sample Size") + title("Enqueuing Time by Sample Size")
#install.packages("ggplot2")
library(ggplot2)
eq_plt <- ggplot(df_grouped, aes(x = SampleSize, y = EnqueueTime, colour = DataStructure)) +
geom_point() + geom_line() + ylab("Enqueue Time (Seconds)") + xlab("Sample Size") + title("Enqueuing Time by Sample Size")
#install.packages("ggplot2")
library(ggplot2)
eq_plt <- ggplot(df_grouped, aes(x = SampleSize, y = EnqueueTime, colour = DataStructure)) +
geom_point() + geom_line() + ylab("Enqueue Time (Seconds)") + xlab("Sample Size") + title("Enqueuing Time by Sample Size")
setwd("/home/oli/Desktop/Github/Algorithms & Analysis/Algorithm-Assignment-1/in/")
df <- read.csv("results.txt", header=TRUE, sep=",")
#install.packages("dplyr")
library(dplyr)
df$DataStructure <- recode(df$DataStructure, BinarySearchTreeRQ = 'Tree', OrderedArrayRQ = 'Array',
OrderedLinkedListRQ = 'LinkedList')
df_grouped <- df %>% group_by(DataStructure, SampleSize)
df_grouped <- df_grouped %>% summarise(
EnqueueTime = mean(EnqueueTime),
PtTime = mean(PtTime),
DequeueTime = mean(DequeueTime)
)
df_grouped
#install.packages("ggplot2")
library(ggplot2)
eq_plt <- ggplot(df_grouped, aes(x = SampleSize, y = EnqueueTime, colour = DataStructure)) +
geom_point() +
geom_line() +
ylab("Enqueue Time (Seconds)") +
xlab("Sample Size") +
title("Enqueuing Time by Sample Size")
#install.packages("ggplot2")
library(ggplot2)
eq_plt <- ggplot(df_grouped, aes(x = SampleSize, y = EnqueueTime, colour = DataStructure)) +
geom_point() +
geom_line() +
ylab("Enqueue Time (Seconds)") +
xlab("Sample Size") +
ggtitle("Enqueuing Time by Sample Size")
eq_plt
pt_plt <- ggplot(df_grouped, aes(x = SampleSize, y = PtTime, colour = DataStructure)) +
geom_point() +
geom_line() +
ylab("Pt Time (Seconds)") +
xlab("Sample Size") +
ggtitle("Pt Time by Sample Size")
pt_plt
dq_plt <- ggplot(df_grouped, aes(x = SampleSize, y = DequeueTime, colour = DataStructure)) +
geom_point() +
geom_line() +
ylab("Pt Time (Seconds)") +
xlab("Sample Size") +
ggtitle("Pt Time by Sample Size")
dq_plt
dq_plt <- ggplot(df_grouped, aes(x = SampleSize, y = DequeueTime, colour = DataStructure)) +
geom_point() +
geom_line() +
ylab("Dequeue Time (Seconds)") +
xlab("Sample Size") +
ggtitle("Pt Time by Sample Size")
dq_plt
ggplot(df, aes(x = SampleSize, y = EnqueueTime, colour = DataStructure)) +
stat_summary(geom = "ribbon", fun.data = mean_cl_normal, width = 0.1, conf.int = 0.95) +
stat_summary(geom = "line", fun.y = mean, linetype = "dashed") +
stat_summary(geom = "point", fun.y = mean)
install.packages("Hmisc")
library(Hmisc)
ggplot(df, aes(x = SampleSize, y = EnqueueTime, colour = DataStructure)) +
stat_summary(geom = "ribbon", fun.data = mean_cl_normal, width = 0.1, conf.int = 0.95) +
stat_summary(geom = "line", fun.y = mean, linetype = "dashed") +
stat_summary(geom = "point", fun.y = mean)
ggplot(df, aes(x = SampleSize, y = EnqueueTime, colour = DataStructure)) +
stat_summary(geom = "ribbon", fun.data = mean_cl_normal, width = 0.1, conf.int = 0.95) +
stat_summary(geom = "line", fun.y = mean) +
stat_summary(geom = "point", fun.y = mean)
ggplot(df, aes(x = SampleSize, y = PtTime, colour = DataStructure)) +
stat_summary(geom = "ribbon", fun.data = mean_cl_normal, width = 0.1, conf.int = 0.95) +
stat_summary(geom = "line", fun.y = mean) +
stat_summary(geom = "point", fun.y = mean)
ggplot(df, aes(x = SampleSize, y = DequeueTime, colour = DataStructure)) +
stat_summary(geom = "ribbon", fun.data = mean_cl_normal, width = 0.1, conf.int = 0.95) +
stat_summary(geom = "line", fun.y = mean) +
stat_summary(geom = "point", fun.y = mean)
eq_plt <- ggplot(df, aes(x = SampleSize, y = EnqueueTime, colour = DataStructure)) +
stat_summary(geom = "ribbon", fun.data = mean_cl_normal, width = 0.1, conf.int = 0.95) +
stat_summary(geom = "line", fun.y = mean) +
stat_summary(geom = "point", fun.y = mean) +
ggtitle("Enqueue Time by Input Size") +
labels(x="Enqueue Time (Seconds", y="Input Size")
eq_plt <- ggplot(df, aes(x = SampleSize, y = EnqueueTime, colour = DataStructure)) +
stat_summary(geom = "ribbon", fun.data = mean_cl_normal, width = 0.1, conf.int = 0.95) +
stat_summary(geom = "line", fun.y = mean) +
stat_summary(geom = "point", fun.y = mean) +
ggtitle("Enqueue Time by Input Size") +
geom_label(x="Enqueue Time (Seconds", y="Input Size")
eq_plt <- ggplot(df, aes(x = SampleSize, y = EnqueueTime, colour = DataStructure)) +
stat_summary(geom = "ribbon", fun.data = mean_cl_normal, width = 0.1, conf.int = 0.95) +
stat_summary(geom = "line", fun = mean) +
stat_summary(geom = "point", fun = mean) +
geom_tile("Enqueue Time by Input Size") +
geom_label(x="Enqueue Time (Seconds", y="Input Size")
eq_plt <- ggplot(df, aes(x = SampleSize, y = EnqueueTime, colour = DataStructure)) +
stat_summary(geom = "ribbon", fun.data = mean_cl_normal, width = 0.1, conf.int = 0.95) +
stat_summary(geom = "line", fun.y = mean) +
stat_summary(geom = "point", fun.y = mean) +
geom_tile("Enqueue Time by Input Size") +
geom_label(x="Enqueue Time (Seconds", y="Input Size")
eq_plt <- ggplot(df, aes(x = SampleSize, y = EnqueueTime, colour = DataStructure)) +
stat_summary(geom = "ribbon", fun.data = mean_cl_normal, width = 0.1, conf.int = 0.95) +
stat_summary(geom = "line", fun.y = mean) +
stat_summary(geom = "point", fun.y = mean) +
geom_tile("Enqueue Time by Input Size") +
geom_label(x="Enqueue Time (Seconds", y="Input Size")
eq_plt <- ggplot(df, aes(x = SampleSize, y = EnqueueTime, colour = DataStructure)) +
stat_summary(geom = "ribbon", fun.data = mean_cl_normal, width = 0.1, conf.int = 0.95) +
stat_summary(geom = "line", fun.y = mean) +
stat_summary(geom = "point", fun.y = mean) +
#
eq_plt <- ggplot(df, aes(x = SampleSize, y = EnqueueTime, colour = DataStructure)) +
stat_summary(geom = "ribbon", fun.data = mean_cl_normal, width = 0.1, conf.int = 0.95) +
stat_summary(geom = "line", fun.y = mean) +
stat_summary(geom = "point", fun.y = mean) +
eq_plt <- ggplot(df, aes(x = SampleSize, y = EnqueueTime, colour = DataStructure)) +
stat_summary(geom = "ribbon", fun.data = mean_cl_normal, width = 0.1, conf.int = 0.95) +
stat_summary(geom = "line", fun.y = mean) +
stat_summary(geom = "point", fun.y = mean) +
ggtitle("Enqueue Time by Input Size") +
geom_label(x="Enqueue Time (Seconds", y="Input Size")
eq_plt <- ggplot(df, aes(x = SampleSize, y = EnqueueTime, colour = DataStructure)) +
stat_summary(geom = "ribbon", fun.data = mean_cl_normal, width = 0.1, conf.int = 0.95) +
stat_summary(geom = "line", fun.y = mean) +
stat_summary(geom = "point", fun.y = mean) +
ggtitle("Enqueue Time by Input Size") +
geom_label(x="Enqueue Time (Seconds", y="Input Size")
eq_plt
eq_plt <- ggplot(df, aes(x = SampleSize, y = EnqueueTime, colour = DataStructure)) +
stat_summary(geom = "ribbon", fun.data = mean_cl_normal, width = 0.1, conf.int = 0.95) +
stat_summary(geom = "line", fun.y = mean) +
stat_summary(geom = "point", fun.y = mean) +
ggtitle("Enqueue Time by Input Size") +
geom_label(aes(x="Enqueue Time (Seconds", y="Input Size"))
eq_plt
pt_plt <- ggplot(df, aes(x = SampleSize, y = PtTime, colour = DataStructure)) +
stat_summary(geom = "ribbon", fun.data = mean_cl_normal, width = 0.1, conf.int = 0.95) +
stat_summary(geom = "line", fun.y = mean) +
stat_summary(geom = "point", fun.y = mean)
pt_plt <- ggplot(df, aes(x = SampleSize, y = PtTime, colour = DataStructure)) +
stat_summary(geom = "ribbon", fun.data = mean_cl_normal, width = 0.1, conf.int = 0.95) +
stat_summary(geom = "line", fun.y = mean) +
stat_summary(geom = "point", fun.y = mean)
pt_plt
eq_plt <- ggplot(df, aes(x = SampleSize, y = EnqueueTime, colour = DataStructure)) +
stat_summary(geom = "ribbon", fun.data = mean_cl_normal, width = 0.1, conf.int = 0.95) +
stat_summary(geom = "line", fun.y = mean) +
stat_summary(geom = "point", fun.y = mean) +
ggtitle("Enqueue Time by Input Size") +
xlab("Enqueue Time (Seconds") +
ylab("Input Size")
eq_plt
dq_plt <- ggplot(df, aes(x = SampleSize, y = DequeueTime, colour = DataStructure)) +
geom_point() +
geom_line() +
stat_smooth()
ggplot(df, aes(x = SampleSize, y = DequeueTime, colour = DataStructure)) +
geom_point() +
geom_line() +
stat_smooth()
ggplot(df, aes(x = SampleSize, y = mean(DequeueTime), colour = DataStructure)) +
geom_point() +
geom_line() +
stat_smooth()
dq_plt <- ggplot(df, aes(x = SampleSize, y = DequeueTime, colour = DataStructure)) +
stat_summary(geom = "ribbon", fun.data = mean_cl_normal, width = 0.1, conf.int = 0.95) +
stat_summary(geom = "line", fun.y = mean) +
stat_summary(geom = "point", fun.y = mean) +
ggtitle("Dequeue Time by Input Size") +
xlab("Dequeue Time (Seconds") +
ylab("Input Size")
dq_plt
setwd("/home/oli/Desktop/Github/Algorithms & Analysis/Algorithm-Assignment-1/in/")
df <- read.csv("results.txt", header=TRUE, sep=",")
#install.packages("dplyr")
library(dplyr)
df$DataStructure <- recode(df$DataStructure, BinarySearchTreeRQ = 'Tree', OrderedArrayRQ = 'Array',
OrderedLinkedListRQ = 'LinkedList')
eq_plt <- ggplot(df, aes(x = SampleSize, y = EnqueueTime, colour = DataStructure)) +
stat_summary(geom = "ribbon", fun.data = mean_cl_normal, width = 0.1, conf.int = 0.95) +
stat_summary(geom = "line", fun.y = mean) +
stat_summary(geom = "point", fun.y = mean) +
ggtitle("Enqueue Time by Input Size") +
xlab("Enqueue Time (Seconds") +
ylab("Input Size")
library(ggplot2)
eq_plt <- ggplot(df, aes(x = SampleSize, y = EnqueueTime, colour = DataStructure)) +
stat_summary(geom = "ribbon", fun.data = mean_cl_normal, width = 0.1, conf.int = 0.95) +
stat_summary(geom = "line", fun.y = mean) +
stat_summary(geom = "point", fun.y = mean) +
ggtitle("Enqueue Time by Input Size") +
xlab("Enqueue Time (Seconds") +
ylab("Input Size")
eq_plt
pt_plt <- ggplot(df, aes(x = SampleSize, y = PtTime, colour = DataStructure)) +
stat_summary(geom = "ribbon", fun.data = mean_cl_normal, width = 0.1, conf.int = 0.95) +
stat_summary(geom = "line", fun.y = mean) +
stat_summary(geom = "point", fun.y = mean) +
ggtitle("PT Time by Input Size") +
xlab("PT Time (Seconds") +
ylab("Input Size")
pt_plt
dq_plt <- ggplot(df, aes(x = SampleSize, y = DequeueTime, colour = DataStructure)) +
stat_summary(geom = "ribbon", fun.data = mean_cl_normal, width = 0.1, conf.int = 0.95) +
stat_summary(geom = "line", fun.y = mean) +
stat_summary(geom = "point", fun.y = mean) +
ggtitle("Dequeue Time by Input Size") +
xlab("Dequeue Time (Seconds") +
ylab("Input Size")
dq_plt
dq_plt <- ggplot(df, aes(x = SampleSize, y = DequeueTime, colour = DataStructure)) +
stat_summary(geom = "ribbon", fun.data = mean_cl_normal, width = 0.1, conf.int = 0.95) +
stat_summary(geom = "line", fun.y = mean) +
stat_summary(geom = "point", fun.y = mean) +
ggtitle("Dequeue Time by Input Size") +
ylab("Dequeue Time (Seconds") +
xlab("Input Size")
dq_plt
dq_plt <- ggplot(df, aes(x = SampleSize, y = DequeueTime, colour = DataStructure)) +
stat_summary(geom = "ribbon", fun.data = mean_cl_normal, width = 0.1, conf.int = 0.95) +
stat_summary(geom = "line", fun.y = mean) +
stat_summary(geom = "point", fun.y = mean) +
ggtitle("Dequeue Time by Input Size") +
ylab("Dequeue Time (Seconds") +
xlab("Input Size")
dq_plt
library(ggplot2)
eq_plt <- ggplot(df, aes(x = SampleSize, y = EnqueueTime, colour = DataStructure)) +
stat_summary(geom = "ribbon", fun.data = mean_cl_normal, width = 0.1, conf.int = 0.95) +
stat_summary(geom = "line", fun.y = mean) +
stat_summary(geom = "point", fun.y = mean) +
ggtitle("Enqueue Time by Input Size") +
ylab("Enqueue Time (Seconds") +
xlab("Input Size")
eq_plt
pt_plt <- ggplot(df, aes(x = SampleSize, y = PtTime, colour = DataStructure)) +
stat_summary(geom = "ribbon", fun.data = mean_cl_normal, width = 0.1, conf.int = 0.95) +
stat_summary(geom = "line", fun.y = mean) +
stat_summary(geom = "point", fun.y = mean) +
ggtitle("PT Time by Input Size") +
ylab("PT Time (Seconds") +
xlab("Input Size")
pt_plt
dq_plt <- ggplot(df, aes(x = SampleSize, y = DequeueTime, colour = DataStructure)) +
stat_summary(geom = "ribbon", fun.data = mean_cl_normal, width = 0.1, conf.int = 0.95) +
stat_summary(geom = "line", fun.y = mean) +
stat_summary(geom = "point", fun.y = mean) +
ggtitle("Dequeue Time by Input Size") +
ylab("Dequeue Time (Seconds") +
xlab("Input Size")
dq_plt
setwd("/home/oli/Desktop/Github/Algorithms & Analysis/Algorithm-Assignment-1/in/")
df <- read.csv("results.txt", header=TRUE, sep=",")
#install.packages("dplyr")
library(dplyr)
df$DataStructure <- recode(df$DataStructure, BinarySearchTreeRQ = 'Tree', OrderedArrayRQ = 'Array',
OrderedLinkedListRQ = 'LinkedList')
library(ggplot2)
eq_plt <- ggplot(df, aes(x = SampleSize, y = EnqueueTime, colour = DataStructure)) +
stat_summary(geom = "ribbon", fun.data = mean_cl_normal, width = 0.1, conf.int = 0.95) +
stat_summary(geom = "line", fun.y = mean) +
stat_summary(geom = "point", fun.y = mean) +
ggtitle("Enqueue Time by Input Size") +
ylab("Enqueue Time (Seconds)") +
xlab("Input Size")
eq_plt
pt_plt <- ggplot(df, aes(x = SampleSize, y = PtTime, colour = DataStructure)) +
stat_summary(geom = "ribbon", fun.data = mean_cl_normal, width = 0.1, conf.int = 0.95) +
stat_summary(geom = "line", fun.y = mean) +
stat_summary(geom = "point", fun.y = mean) +
ggtitle("PT Time by Input Size") +
ylab("PT Time (Seconds)") +
xlab("Input Size")
pt_plt
dq_plt <- ggplot(df, aes(x = SampleSize, y = DequeueTime, colour = DataStructure)) +
stat_summary(geom = "ribbon", fun.data = mean_cl_normal, width = 0.1, conf.int = 0.95) +
stat_summary(geom = "line", fun.y = mean) +
stat_summary(geom = "point", fun.y = mean) +
ggtitle("Dequeue Time by Input Size") +
ylab("Dequeue Time (Seconds)") +
xlab("Input Size")
dq_plt
